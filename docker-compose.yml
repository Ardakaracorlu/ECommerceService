version: '3.8'
services:
  # RabbitMQ Servisi
  rabbitmq:
    image: rabbitmq:3-management
    hostname: "rabbitmq"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    ports:
      - "5672:5672"  # Mesajla�ma portu
      - "15672:15672"  # Y�netim paneli portu
    volumes:
      - /var/lib/rabbitmq
    networks:
      - ecommerce-network

      # Notification Servisi ve PostgreSQL
  notification-postgres:
    image: postgres:latest
    hostname: "notification"
    environment:
      POSTGRES_USER: notifications_user
      POSTGRES_PASSWORD: notifications_password
      POSTGRES_DB: notificationsdb
    ports:
      - "5433:5432"
    volumes:
      - /var/lib/postgresql/data
      - ./Notification.Data/initdb/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - ecommerce-network

    notification-service:
        build:
          context: .
          dockerfile: Notification.Api/Dockerfile
        image: notificationapi-notification-service
        ports:
          - "5001:80"
        environment:
          ConnectionStrings__Postgres: Server=notification-postgres;Port=5432;Database=notificationsdb;User Id=notifications_user;Password=notifications_password
          RabbitMQSettings__HostName: rabbitmq
          RabbitMQSettings__UserName: user
          RabbitMQSettings__Password: password
          ASPNETCORE_ENVIRONMENT: Development
          ASPNETCORE_URLS: http://+:80
    
        depends_on:
          - rabbitmq
          - notification-postgres
        networks:
          - ecommerce-network
    
  # Stock Servisi ve PostgreSQL
  stocks-postgres:
    image: postgres:latest
    hostname: "stocks"
    environment:
      POSTGRES_USER: stocks_user
      POSTGRES_PASSWORD: stocks_password
      POSTGRES_DB: stocksdb
    ports:
      - "5434:5432"
    volumes:
      - /var/lib/postgresql/data
      - ./Stock.Data/initdb/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - ecommerce-network

    stock-service:
    build:
      context: .
      dockerfile: Stock.Api/Dockerfile
    image: stockapi-stock-service
    ports:
      - "5002:80"
    environment:
      ConnectionStrings__Postgres: Server=stocks-postgres;Port=5432;Database=stocksdb;User Id=stocks_user;Password=stocks_password;
      RabbitMQSettings__HostName: rabbitmq
      RabbitMQSettings__UserName: user
      RabbitMQSettings__Password: password
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:80
    depends_on:
      - rabbitmq
      - stocks-postgres
    networks:
      - ecommerce-network

      # Order Servisi ve PostgreSQL
  orders-postgres:
    image: postgres:latest
    hostname: "orders"
    environment:
      POSTGRES_USER: orders_user
      POSTGRES_PASSWORD: orders_password
      POSTGRES_DB: ordersdb
    ports:
      - "5432:5432"
    volumes:
      - /var/lib/postgresql/data
      - ./Order.Data/initdb/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - ecommerce-network

    order-service:
        build:
          context: .
          dockerfile: Order.Api/Dockerfile
        container_name: order-service
        image: orderapi-order-service
        ports:
          - "5000:80"
        environment:
          ConnectionStrings__Postgres: Server=orders-postgres;Port=5432;Database=ordersdb;User Id=orders_user;Password=orders_password
          RabbitMQSettings__HostName: rabbitmq
          RabbitMQSettings__UserName: user
          RabbitMQSettings__Password: password
          ASPNETCORE_ENVIRONMENT: Development
          ASPNETCORE_URLS: http://+:80
        depends_on:
          - rabbitmq
          - orders-postgres    
        networks:
          - ecommerce-network
  
networks:
  ecommerce-network:
    driver: bridge
